<?xml version="1.0" encoding="utf-8"?>
<package >
  <metadata>
    <id>TxFileManager</id>
    <version>1.4.0-beta02</version>
    <title>.NET Transactional File Manager - include disk IO operations in your transactions</title>
    <authors>chinhdo</authors>
    <owners>chinhdo</owners>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <license type="expression">MIT</license>
    <projectUrl>https://github.com/chinhdo/txFileManager</projectUrl>
    <description>
    Transactional File Manager is a .NET API that supports including file system operations such as file copy, move, delete, append, etc. in a transaction. It's an implementation of System.Transaction.IEnlistmentNotification (works with System.Transactions.TransactionScope). See GitHub project for more info: https://github.com/chinhdo/txFileManager
    </description>
    <summary>
    Transactional File Manager is a .NET API that supports including file system operations such as file copy, move, delete, append, etc. in a transaction. It's an implementation of System.Transaction.IEnlistmentNotification (works with System.Transactions.TransactionScope). See GitHub project for more info: https://github.com/chinhdo/txFileManager
    </summary>
    <releaseNotes>
    * Convert to xUnit tests
    * Add support for custom temp paths to address issues with file/dir operations accross filesystems
    * Fix for resource leak in TxFileManager._txEnlistment
    * Target .NET Standard 2.0
    </releaseNotes>
    <copyright>Copyright 2016-2020 Chinh Do</copyright>
    <tags>TransactionScope File Directory Transaction Transactions c# dotnet .NET</tags>
    <repository type="git" url="https://github.com/chinhdo/txFileManager" branch="release/1.4.0" commit="4ab9f6beb8e27ca8381392c3fa08b3496a6f333d" />
  </metadata>
  <files>
    <file src="..\readme.md" target="" />
    <!-- <file src="**\*.*" target="" /> -->
  </files>
</package>

